{"version":3,"sources":["context/UserContext.js","components/ProtectedRoutes.js","components/Navigation.js","api/constants.js","pages/Register.js","pages/Login.js","pages/Workouts.js","pages/ExerciseBuilder.js","components/TrainingCard.js","pages/HomePage.js","pages/ViewWorkout.js","Routes.js","App.js","index.js"],"names":["UserContext","createContext","ProtectedRoutes","setUser","useContext","Navbar","bg","variant","to","Brand","Nav","className","Link","onClick","Navigation","user","token","style","width","BASE_URL","Register","useState","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","error","setError","message","setMessage","onSubmit","event","a","preventDefault","axios","post","data","success","Row","Col","md","span","offset","Form","Group","Label","Control","type","placeholder","onChange","target","value","Button","Alert","Login","history","useHistory","localStorage","setItem","JSON","stringify","push","Workouts","title","workouts","setWorkouts","WORKOUTS","getWorkouts","get","headers","Authorization","allWorkouts","useEffect","onDelete","workoutId","currentTarget","id","delete","length","map","workout","Card","key","_id","padding","margin","Title","name","exercises","exercise","index","Text","as","marginLeft","marginRight","Container","Spinner","animation","role","ExerciseBuilder","authToken","editable","setEditable","allMuscleGroups","setAllMuscleGroups","exerciseName","setExerciseName","muscleGroup","setMuscleGroup","exercisePlans","setExercisePlans","selectedMuscleGroup","config","getAllMuscleGroups","handleUpdateExercisePlan","prop","newExercisePlans","plan","Body","controlId","column","sm","e","custom","disabled","hidden","exercisePlan","sets","min","reps","Subtitle","lg","Footer","exerciseId","console","log","then","TrainingCard","height","backgroundSize","Homepage","xs","ViewWorkout","setWorkout","useParams","getWorkout","marginTop","boxShadow","description","paddingLeft","equipments","join","Routes","exact","path","App","localUser","getItem","parsedLocalUser","parse","Provider","fluid","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d06f31f5.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst UserContext = createContext();\n\nexport default UserContext;\n","import React, { useContext } from \"react\";\nimport Nav from \"react-bootstrap/esm/Nav\";\nimport Navbar from \"react-bootstrap/esm/Navbar\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nimport UserContext from \"../context/UserContext\";\n\nconst ProtectedRoutes = () => {\n  const { setUser } = useContext(UserContext);\n\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\">\n      <LinkContainer to=\"/homepage\">\n        <Navbar.Brand>Workout-Tracker</Navbar.Brand>\n      </LinkContainer>\n      <Nav className=\"mr-auto\">\n        <LinkContainer to=\"/homepage\">\n          <Nav.Link>Homepage</Nav.Link>\n        </LinkContainer>\n        <LinkContainer to=\"/workouts\">\n          <Nav.Link>Workouts</Nav.Link>\n        </LinkContainer>\n        <Nav.Link onClick={() => setUser({})}>Logout</Nav.Link>\n      </Nav>\n    </Navbar>\n  );\n};\n\nexport default ProtectedRoutes;\n","import React, { useContext } from \"react\";\nimport Nav from \"react-bootstrap/esm/Nav\";\nimport Navbar from \"react-bootstrap/esm/Navbar\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nimport UserContext from \"../context/UserContext\";\nimport ProtectedRoutes from \"./ProtectedRoutes\";\n\nconst Navigation = () => {\n  const { user } = useContext(UserContext);\n\n  if (user.token) {\n    return <ProtectedRoutes />;\n  }\n\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\">\n      <LinkContainer to=\"/login\">\n        <Navbar.Brand>Workout-Tracker</Navbar.Brand>\n      </LinkContainer>\n      <Nav className=\"justify-content-end\" style={{ width: \"100%\" }}>\n        <LinkContainer to=\"/login\">\n          <Nav.Link>Login</Nav.Link>\n        </LinkContainer>\n        <LinkContainer to=\"/register\">\n          <Nav.Link>Register</Nav.Link>\n        </LinkContainer>\n        <LinkContainer to=\"/exerciseBuilder\">\n          <Nav.Link>Build Workout</Nav.Link>\n        </LinkContainer>\n      </Nav>\n    </Navbar>\n  );\n};\n\nexport default Navigation;\n","export const BASE_URL =\n  process.env.NODE_ENV === \"development\"\n    ? \"http://localhost:8000\"\n    : \"https://mighty-wave-63765.herokuapp.com\";\n\nexport const REGISTER_URL = `${BASE_URL}/auth/register`;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport { BASE_URL } from \"../api/constants\";\nimport { Link } from \"react-router-dom\";\n\nconst Register = () => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const onFirstNameChange = (event) => {\n    setFirstName(event.target.value);\n  };\n\n  const onLastNameChange = (event) => {\n    setLastName(event.target.value);\n  };\n\n  const onEmailChange = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const onPasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const {\n        data: { message, success },\n      } = await axios.post(`${BASE_URL}/auth/register`, {\n        firstName,\n        lastName,\n        email,\n        password,\n      });\n\n      if (success) {\n        setMessage(message);\n      } else {\n        setError(message);\n      }\n    } catch (error) {\n      setError(\"Failed to create account. Please try again.\");\n    }\n  };\n\n  return (\n    <Row className=\"mt-4\">\n      <Col md={{ span: 6, offset: 3 }}>\n        <Form onSubmit={onSubmit}>\n          <Form.Group>\n            <Form.Label>First Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter first name\"\n              onChange={onFirstNameChange}\n              value={firstName}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Last Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter last name\"\n              onChange={onLastNameChange}\n              value={lastName}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter email\"\n              onChange={onEmailChange}\n              value={email}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={onPasswordChange}\n              value={password}\n            />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n        {error ? (\n          <Alert className=\"my-3\" variant=\"danger\">\n            {error}\n          </Alert>\n        ) : null}\n        {message ? (\n          <Alert className=\"my-3 text-center\" variant=\"primary\">\n            <p>{message}</p>\n            <Link to=\"/login\">Go to login page</Link>\n          </Alert>\n        ) : null}\n      </Col>\n    </Row>\n  );\n};\n\nexport default Register;\n","import React, { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport UserContext from \"../context/UserContext\";\nimport { BASE_URL } from \"../api/constants\";\n\nconst Login = () => {\n  const { setUser } = useContext(UserContext);\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const history = useHistory();\n\n  const onEmailChange = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const onPasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const { data } = await axios.post(`${BASE_URL}/auth/login`, {\n        email,\n        password,\n      });\n\n      setUser(data);\n\n      //Local Storage, this persists the user's email and token\n      const { token } = data;\n      const user = { email, token };\n      localStorage.setItem(\"user\", JSON.stringify(user));\n\n      // Navigate to the homepage.\n      history.push(\"./homepage\");\n    } catch (error) {\n      setError(\"Failed to login. Please try again.\");\n    }\n  };\n\n  return (\n    <Row className=\"mt-4\">\n      <Col md={{ span: 6, offset: 3 }}>\n        <Form onSubmit={onSubmit}>\n          <Form.Group>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter email\"\n              onChange={onEmailChange}\n              value={email}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={onPasswordChange}\n              value={password}\n            />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n        {error ? (\n          <Alert className=\"my-3\" variant=\"danger\">\n            {error}\n          </Alert>\n        ) : null}\n      </Col>\n    </Row>\n  );\n};\n\nexport default Login;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Card, Button, Spinner, Container, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nimport { BASE_URL } from \"../api/constants\";\nimport UserContext from \"../context/UserContext\";\n\nconst Workouts = ({ title }) => {\n  const { user } = useContext(UserContext);\n\n  const [workouts, setWorkouts] = useState([]);\n\n  const WORKOUTS = `${BASE_URL}/user/workouts`;\n\n  const getWorkouts = async () => {\n    const { data } = await axios.get(WORKOUTS, {\n      headers: {\n        Authorization: `Bearer ${user.token}`,\n      },\n    });\n\n    setWorkouts(data.allWorkouts);\n  };\n\n  useEffect(() => {\n    getWorkouts();\n  }, []);\n\n  const onDelete = async (event) => {\n    const workoutId = event.currentTarget.id;\n\n    const { data } = await axios.delete(`${WORKOUTS}/${workoutId}`, {\n      headers: {\n        Authorization: `Bearer ${user.token}`,\n      },\n    });\n\n    if (data.success) {\n      getWorkouts();\n    }\n  };\n\n  if (workouts.length !== 0) {\n    return (\n      <Row>\n        {workouts.map((workout) => {\n          return (\n            <Card\n              key={workout._id}\n              className=\"text-center\"\n              style={{ width: \"30%\", padding: \"15px\", margin: \"15px\" }}\n            >\n              <Card.Title className=\"mt-auto\">{workout.name}</Card.Title>\n\n              {workout.exercises.map((exercise, index) => {\n                return exercise.exercise ? (\n                  <Card.Text key={index}>{exercise.exercise.name}</Card.Text>\n                ) : null;\n              })}\n\n              <Row>\n                <Col>\n                  <Button\n                    as={Link}\n                    variant=\"dark\"\n                    to={`/view-workouts/${workout._id}`}\n                    className=\"mt-auto\"\n                    style={{\n                      padding: \"10px\",\n                      marginLeft: \"5px\",\n                      marginRight: \"5px\",\n                    }}\n                  >\n                    View workout\n                  </Button>\n                </Col>\n                <Col>\n                  <Button\n                    id={workout._id}\n                    variant=\"danger\"\n                    className=\"mt-auto\"\n                    style={{\n                      padding: \"10px\",\n                      marginLeft: \"5px\",\n                      marginRight: \"5px\",\n                    }}\n                    onClick={onDelete}\n                  >\n                    Delete Workout\n                  </Button>\n                </Col>\n              </Row>\n            </Card>\n          );\n        })}\n      </Row>\n    );\n  }\n  return (\n    <Container>\n      <h1>Loading Workouts</h1>\n      <Spinner animation=\"border\" role=\"status\" />\n    </Container>\n  );\n};\n\nexport default Workouts;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { Container, Form, Row, Col, Button, Card } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport UserContext from \"../context/UserContext\";\nimport { BASE_URL } from \"../api/constants\";\n\nconst ExerciseBuilder = () => {\n    const { user } = useContext(UserContext);\n    const authToken = user.token;\n\n    const createNewExercisePlan = () => ({ exercise: \"\", sets: \"\", reps: \"\" });\n\n    const [editable, setEditable] = useState(true);\n\n    const [allMuscleGroups, setAllMuscleGroups] = useState([]);\n\n    const [exerciseName, setExerciseName] = useState(\"\");\n    const [muscleGroup, setMuscleGroup] = useState(\"\");\n    const [exercisePlans, setExercisePlans] = useState([]);\n\n    const selectedMuscleGroup = muscleGroup ? allMuscleGroups[muscleGroup] : {};\n\n    const config = {\n        headers: { Authorization: `Bearer ${authToken}` },\n    };\n\n    useEffect(() => {\n        const getAllMuscleGroups = async () => {\n            const { data } = await axios.get(`${BASE_URL}/api/muscleGroups`, config);\n            setAllMuscleGroups(data);\n        };\n        getAllMuscleGroups();\n    }, []);\n\n    const saveWorkout = (event) => {\n        event.preventDefault();\n\n        const workout = {\n            name: exerciseName,\n            muscleGroup: selectedMuscleGroup._id,\n            exercises: exercisePlans.map((exercisePlan) => {\n                const { exercise, sets, reps } = exercisePlan;\n\n                return {\n                    exerciseId: exercise\n                        ? selectedMuscleGroup.exercises[exercise]._id\n                        : selectedMuscleGroup.exercises[0]._id,\n                    sets: +sets,\n                    reps: +reps,\n                };\n            }),\n        };\n\n        console.log(workout);\n\n        axios.post(`${BASE_URL}/user/workouts`, workout, config).then(console.log);\n    };\n\n    const handleAddExercisePlan = (e) => {\n        e.preventDefault();\n\n        setExercisePlans([...exercisePlans, createNewExercisePlan()]);\n    };\n\n    const handleUpdateExercisePlan = (event, index, prop) => {\n        event.preventDefault();\n\n        const newExercisePlans = exercisePlans.map((plan) => ({ ...plan }));\n\n        newExercisePlans[index][prop] = event.target.value;\n\n        setExercisePlans(newExercisePlans);\n    };\n\n    return (\n        <Container className=\"h-100\">\n            {editable && (\n                <Card className=\"my-5  shadow\">\n                    <Card.Body>\n                        <Form>\n                            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n                                <Form.Label column sm={2}>\n                                    Exercise name\n                </Form.Label>\n                                <Col sm={10}>\n                                    <Form.Control\n                                        type=\"text\"\n                                        value={exerciseName}\n                                        placeholder=\"2 weeks abs builder\"\n                                        onChange={(e) => setExerciseName(e.target.value)}\n                                    />\n                                </Col>\n                            </Form.Group>\n\n                            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n                                <Form.Label column sm={2}>\n                                    Muscle groups\n                </Form.Label>\n                                <Col sm={10}>\n                                    <Form.Control\n                                        as=\"select\"\n                                        value={muscleGroup}\n                                        onChange={(e) => setMuscleGroup(e.target.value)}\n                                        custom\n                                    >\n                                        <option value=\"\" disabled hidden>\n                                            Choose muscle group\n                    </option>\n                                        {allMuscleGroups.map((muscleGroup, index) => (\n                                            <option key={index} value={index}>\n                                                {muscleGroup.name}\n                                            </option>\n                                        ))}\n                                    </Form.Control>\n                                </Col>\n                            </Form.Group>\n\n                            {exercisePlans.map((exercisePlan, index) => (\n                                <Form.Group key={index} as={Row}>\n                                    <Form.Label column sm={2}>\n                                        {\" \"}\n                    Exercise plan {index + 1}\n                                    </Form.Label>\n                                    <Col sm={10}>\n                                        <Form.Row>\n                                            <Form.Group as={Col} md=\"8\">\n                                                <Form.Control\n                                                    as=\"select\"\n                                                    value={exercisePlan.exercise}\n                                                    onChange={(event) =>\n                                                        handleUpdateExercisePlan(event, index, \"exercise\")\n                                                    }\n                                                    placeholder=\"Choose exercise\"\n                                                    custom\n                                                >\n                                                    <option value=\"\" disabled hidden>\n                                                        Choose exercise\n                          </option>\n                                                    {selectedMuscleGroup.exercises.map(\n                                                        (exercise, index) => (\n                                                            <option key={index} value={index}>\n                                                                {exercise.name}\n                                                            </option>\n                                                        )\n                                                    )}\n                                                </Form.Control>\n                                            </Form.Group>\n                                            <Form.Group as={Col} md=\"2\">\n                                                <Form.Control\n                                                    type=\"number\"\n                                                    value={exercisePlan.sets}\n                                                    min=\"0\"\n                                                    onChange={(e) =>\n                                                        handleUpdateExercisePlan(e, index, \"sets\")\n                                                    }\n                                                    placeholder=\"Sets..\"\n                                                />\n                                            </Form.Group>\n                                            <Form.Group as={Col} md=\"2\">\n                                                <Form.Control\n                                                    type=\"number\"\n                                                    value={exercisePlan.reps}\n                                                    min=\"0\"\n                                                    onChange={(e) =>\n                                                        handleUpdateExercisePlan(e, index, \"reps\")\n                                                    }\n                                                    placeholder=\"Reps..\"\n                                                />\n                                            </Form.Group>\n                                        </Form.Row>\n                                    </Col>\n                                </Form.Group>\n                            ))}\n\n                            <Form.Group as={Row}>\n                                <Col sm={{ span: 10, offset: 2 }}>\n                                    <Button\n                                        variant=\"dark\"\n                                        type=\"submit\"\n                                        onClick={handleAddExercisePlan}\n                                        disabled={!!!muscleGroup}\n                                    >\n                                        Add exercise\n                  </Button>\n                                    <Button\n                                        variant=\"success\"\n                                        onClick={(e) => setEditable(false)}\n                                        className=\"ml-5\"\n                                        type=\"submit\"\n                                    >\n                                        Build\n                  </Button>\n                                </Col>\n                            </Form.Group>\n                        </Form>\n                    </Card.Body>\n                </Card>\n            )}\n\n            {!editable && (\n                <Card className=\"shadow mt-5\">\n                    <Card.Body>\n                        <Card.Title className=\"text-uppercase\">\n                            {exerciseName || \"Unnamed exercise\"}\n                        </Card.Title>\n                        <Card.Subtitle className=\"text-uppercase mb-4\">\n                            {selectedMuscleGroup && selectedMuscleGroup.name}\n                        </Card.Subtitle>\n                        <Row>\n                            {exercisePlans.map((exercisePlan, index) => (\n                                <Col key={index} lg=\"3\">\n                                    <Card className=\"mb-4\">\n                                        <Card.Body>\n                                            <Card.Title className=\"text-capitalize\">\n                                                {selectedMuscleGroup && exercisePlan.exercise\n                                                    ? selectedMuscleGroup.exercises[exercisePlan.exercise]\n                                                        .name\n                                                    : `Exercise ${++index}`}\n                                            </Card.Title>\n                                        </Card.Body>\n                                        <Card.Footer>\n                                            <Row className=\"text-center\">\n                                                <Col className=\"h5 font-weight-light\">\n                                                    {exercisePlan.sets | \"0\"} sets\n                        </Col>\n                                                <Col className=\"h5 font-weight-light\">\n                                                    {exercisePlan.reps | \"0\"} reps\n                        </Col>\n                                            </Row>\n                                        </Card.Footer>\n                                    </Card>\n                                </Col>\n                            ))}\n                        </Row>\n\n                        <Button variant=\"dark\" onClick={saveWorkout} className=\"mr-2 mb-2\">\n                            Save\n            </Button>\n                        <Button\n                            variant=\"dark\"\n                            onClick={(e) => setEditable(true)}\n                            className=\"mr-2 mb-2\"\n                        >\n                            Edit\n            </Button>\n                    </Card.Body>\n                </Card>\n            )}\n        </Container>\n    );\n};\n\nexport default ExerciseBuilder;\n","import React from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst TrainingCard = ({ variant, title }) => {\n  const style = { height: \"400px\", backgroundSize: \"cover\" };\n\n  if (title === \"Fitness\")\n    style[\"backgroundImage\"] =\n      'url(\"https://images.unsplash.com/photo-1526506118085-60ce8714f8c5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=934&q=80\")';\n  else if (title === \"Strength training\")\n    style[\"backgroundImage\"] =\n      'url(\"https://images.unsplash.com/photo-1567013127542-490d757e51fc?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60\")';\n  else if (title === \"Cardio\")\n    style[\"backgroundImage\"] =\n      'url(\"https://images.unsplash.com/photo-1516398810565-0cb4310bb8ea?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60\")';\n  else if (title === \"Stretches\")\n    style[\"backgroundImage\"] =\n      'url(\"https://images.unsplash.com/photo-1539794830467-1f1755804d13?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60\")';\n\n  return (\n    <Card className=\"shadow\" bg={variant} style={style}>\n      <Card.Body className=\"text-center d-flex flex-column\">\n        <Card.Title className=\"mt-auto text-white\">{title}</Card.Title>\n        <Button\n          as={Link}\n          variant=\"dark\"\n          to=\"/exercisebuilder\"\n          className=\"mt-auto\"\n        >\n          Create workout\n        </Button>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default TrainingCard;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport TrainingCard from \"../components/TrainingCard\";\n\nconst Homepage = () => {\n  const exercises = [\n    {\n      title: \"Fitness\",\n      \"bg-img\": \"\",\n      variant: \"danger\",\n    },\n    {\n      title: \"Strength training\",\n      \"bg-img\": \"\",\n      variant: \"warning\",\n    },\n    {\n      title: \"Cardio\",\n      \"bg-img\": \"\",\n      variant: \"success\",\n    },\n    {\n      title: \"Stretches\",\n      \"bg-img\": \"\",\n      variant: \"info\",\n    },\n  ];\n\n  return (\n    <Container style={{ height: \"100vh\" }}>\n      <Row className=\"align-items-center justify-content-center h-100\">\n        {exercises.map((exercise) => (\n          <Col xs=\"6\" sm=\"3\">\n            <TrainingCard {...exercise} />\n          </Col>\n        ))}\n      </Row>\n    </Container>\n  );\n};\n\nexport default Homepage;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Container, Spinner, Row, Col, Card } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { BASE_URL } from \"../api/constants\";\nimport UserContext from \"../context/UserContext\";\n\nconst WORKOUTS = `${BASE_URL}/user/workouts`;\n\nconst ViewWorkout = () => {\n  const { user } = useContext(UserContext);\n\n  const [workout, setWorkout] = useState();\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const getWorkout = async () => {\n      const { data } = await axios.get(`${WORKOUTS}/${id}`, {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      });\n      setWorkout(data.workout);\n    };\n    getWorkout();\n  }, [id]);\n\n  if (workout) {\n    return (\n      <Container\n        className=\"align-items-center justify-content-center\"\n        style={{ height: \"100vh\" }}\n      >\n        <Card\n          style={{\n            marginTop: \"50px\",\n            marginLeft: \"15px\",\n            marginRight: \"15px\",\n            boxShadow: \"-1px 7px 13px -1px rgba(61,61,61,1)\",\n            padding: \"40px\",\n          }}\n        >\n          <h1>{workout.name}</h1>\n          <h2>\n            {workout.muscleGroup.name} - {workout.muscleGroup.description}\n          </h2>\n\n          <h3>Exercises:</h3>\n          <ol>\n            {workout.exercises.map((exercise) => {\n              return (\n                <li key={exercise._id}>\n                  <Row>\n                    <Col>\n                      <h4>{exercise.exercise.name}</h4>\n                    </Col>\n                    <Col>\n                      <h4>Sets: {exercise.sets}</h4>\n                    </Col>\n                    <Col>\n                      <h4>\n                        Reps:\n                        {exercise.reps}\n                      </h4>\n                    </Col>\n                  </Row>\n                  <Row style={{ paddingLeft: \"15px\" }}>\n                    <p>{exercise.exercise.description}</p>\n                  </Row>\n                  <Row style={{ paddingLeft: \"15px\" }}>\n                    <p>\n                      Equipment required:{\" \"}\n                      {exercise.exercise.equipments.join(\",\")}\n                    </p>\n                  </Row>\n                </li>\n              );\n            })}\n          </ol>\n        </Card>\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <h1>Loading Workout...</h1>\n      <Spinner animation=\"border\" role=\"status\" />\n    </Container>\n  );\n};\n\nexport default ViewWorkout;\n","import React, { useContext } from \"react\";\nimport { Redirect, Switch, Route } from \"react-router-dom\";\n\nimport UserContext from \"./context/UserContext\";\nimport Register from \"./pages/Register\";\nimport Login from \"./pages/Login\";\nimport Workouts from \"./pages/Workouts\";\nimport ExerciseBuilder from \"./pages/ExerciseBuilder\";\nimport Homepage from \"./pages/HomePage\";\nimport ViewWorkout from \"./pages/ViewWorkout\";\n\nconst Routes = () => {\n  const { user } = useContext(UserContext);\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        {user.token ? <Redirect to=\"/homepage\" /> : <Login />}\n      </Route>\n      <Route exact path=\"/login\">\n        {user.token ? <Redirect to=\"/homepage\" /> : <Login />}\n      </Route>\n      <Route exact path=\"/register\">\n        {user.token ? <Redirect to=\"/login\" /> : <Register />}\n      </Route>\n      <Route exact path=\"/exerciseBuilder\">\n        {user.token ? <ExerciseBuilder /> : <Redirect to=\"/login\" />}\n      </Route>\n      <Route exact path=\"/workouts\">\n        {user.token ? <Workouts /> : <Redirect to=\"/login\" />}\n      </Route>\n      <Route exact path=\"/view-workouts/:id\">\n        {user.token ? <ViewWorkout /> : <Redirect to=\"/login\" />}\n      </Route>\n      <Route path=\"/homepage\" exact>\n        {user.token ? <Homepage /> : <Redirect to=\"/login\" />}\n      </Route>\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import React, { useState } from \"react\";\nimport Container from \"react-bootstrap/esm/Container\";\n\nimport { HashRouter } from \"react-router-dom\";\nimport Navigation from \"./components/Navigation\";\nimport UserContext from \"./context/UserContext\";\nimport Routes from \"./Routes\";\n\nexport const App = () => {\n  // Create new variables to get the item and parse it from a json object\n  const localUser = localStorage.getItem(\"user\");\n  const parsedLocalUser = JSON.parse(localUser);\n\n  const [user, setUser] = useState(parsedLocalUser || {}); // This is where i put the user in state and where i can get the token.\n\n  return (\n    <HashRouter>\n      <UserContext.Provider value={{ user, setUser }}>\n        <Container fluid>\n          <Navigation />\n          <Routes />\n        </Container>\n      </UserContext.Provider>\n    </HashRouter>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { App } from \"./App\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}